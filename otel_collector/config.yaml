receivers:
  fluentforward:
    endpoint: 0.0.0.0:8006

processors:
  batch: 
    send_batch_size: 500
    timeout: 10s

  filter/webApp1:
    error_mode: ignore
    logs:
      log_record:
        - 'attributes["container_name"] == "/webApp1"'
  
  filter/webApp2:
    error_mode: ignore
    logs:
      log_record:
        - 'attributes["container_name"] == "/webApp2"'

  filter/logs/server:
    error_mode: ignore
    logs:
      log_record:
        - 'not (IsMatch(body, "Server Log.*"))'

  filter/logs/web:
    error_mode: ignore
    logs:
      log_record:
        - 'not (IsMatch(body, "Web Log.*"))'

  filter/logs/access:
    logs:
      include:
        match_type: regexp
        bodies:
          - '^(\S+) \S+ \S+ \[(.*?)\] "(.*?)" (\d{3}) (\d+)'

exporters:
  file/webApp1/server:
    path: './output/webApp1_server_logs.json'
    rotation:
      max_megabytes: 1
      max_days: 1

  file/webApp2/server:
    path: './output/webApp2_server_logs.json'
    rotation:
      max_megabytes: 1
      max_days: 1

  file/web:
    path: './output/web_logs.json'
    rotation:
      max_megabytes: 1
      max_days: 1

  file/access:
    path: './output/access_logs.json'
    rotation:
      max_megabytes: 1
      max_days: 1

  debug:
    verbosity: detailed

service:
  pipelines:
    logs/webApp1_server:
      receivers: [fluentforward]
      processors: [batch, filter/webApp1, filter/logs/server]
      exporters: [file/webApp1/server]
    
    logs/webApp2_server:
      receivers: [fluentforward]
      processors: [batch, filter/webApp2, filter/logs/server]
      exporters: [file/webApp2/server]

